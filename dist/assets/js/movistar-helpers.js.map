{"version":3,"names":[],"mappings":"","sources":["movistar-helpers.js"],"sourcesContent":["(window => {\n  let helpers = (window => {\n    // \"what?\" version ... http://jsperf.com/diacritics/12\n    let removeDiacritics = str => {\n      let diacriticMap = window[\"movistar\"].diacriticMap();\n      return str.replace(/[^\\u0000-\\u007E]/g, a => {\n        return diacriticMap[a] || a;\n      });\n    };\n    let toTitleCase = str => {\n      let i = 0;\n      str = str.toLowerCase().split(\" \");\n      for (i = 0; i < str.length; i++) {\n        str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n      }\n      return str.join(\" \");\n    };\n\n    let getTheNameLength = name => {\n      return name.split(\" \").length;\n    };\n\n    let invariables = [\"la\", \"las\", \"los\", \"de\", \"del\"];\n\n    let isInResponse = (name, response) => {\n      let i;\n      let responseKeys = response.keys;\n      let responseLength = responseKeys.length;\n      let nameToCheck = removeDiacritics(name)\n        .toLowerCase()\n        .trim();\n\n      let switcher = getTheNameLength(nameToCheck);\n\n      let checkSingleWord = singleWord => {\n        for (i = 0; i < responseLength; i++) {\n          if (singleWord === responseKeys[i].toLowerCase()) return true;\n        }\n        return false;\n      };\n\n      switch (switcher) {\n        case 1:\n          {\n            return checkSingleWord(nameToCheck);\n          }\n          break;\n        case 2:\n          {\n            let temp = nameToCheck.split(\" \");\n            if (checkSingleWord(temp[0])) {\n              return checkSingleWord(temp[1]);\n            }\n            return false;\n          }\n          break;\n        default:\n          return false;\n      }\n    };\n\n    let getParams = url => {\n      let params = {};\n      let parser = document.createElement(\"a\");\n      parser.href = url;\n      let query = parser.search.substring(1);\n      let vars = query.split(\"&\");\n      for (let i = 0; i < vars.length; i++) {\n        let pair = vars[i].split(\"=\");\n        params[pair[0]] = decodeURIComponent(pair[1])\n          .replace(/\\+/g, \" \")\n          .replace(/\\s\\s+/g, \" \")\n          .trim();\n      }\n      return params;\n    };\n\n    return {\n      removeDiacritics: removeDiacritics,\n      toTitleCase: toTitleCase,\n      isInResponse: isInResponse,\n      getParams: getParams,\n      invariables: invariables\n    };\n  })(window);\n\n  if (window[\"movistar\"] === undefined) {\n    window[\"movistar\"] = {};\n  }\n\n  window[\"movistar\"][\"helpers\"] = helpers;\n})(document);\n"],"file":"movistar-helpers.js"}